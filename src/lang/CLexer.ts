// Generated from ./src/lang/C.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class CLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly MUL = 33;
	public static readonly DIV = 34;
	public static readonly ADD = 35;
	public static readonly SUB = 36;
	public static readonly MOD = 37;
	public static readonly LOGICAL_AND = 38;
	public static readonly LOGICAL_OR = 39;
	public static readonly EQUALS = 40;
	public static readonly NOT_EQUALS = 41;
	public static readonly LESS = 42;
	public static readonly LESS_EQUAL = 43;
	public static readonly GREATER = 44;
	public static readonly GREATER_EQUAL = 45;
	public static readonly POSTFIX_ADD = 46;
	public static readonly VAR_ADDRESS = 47;
	public static readonly WHITESPACE = 48;
	public static readonly DECIMAL = 49;
	public static readonly FRACTION = 50;
	public static readonly CHAR = 51;
	public static readonly Identifier = 52;
	public static readonly Pointer = 53;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "MUL", 
		"DIV", "ADD", "SUB", "MOD", "LOGICAL_AND", "LOGICAL_OR", "EQUALS", "NOT_EQUALS", 
		"LESS", "LESS_EQUAL", "GREATER", "GREATER_EQUAL", "POSTFIX_ADD", "VAR_ADDRESS", 
		"WHITESPACE", "DECIMAL", "FRACTION", "CHAR", "Nondigit", "Digit", "Fraction", 
		"Identifier", "Pointer",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'void'", "'char'", "'unsigned char'", "'short'", "'unsigned short'", 
		"'int'", "'unsigned int'", "'long'", "'unsigned long'", "'float'", "'double'", 
		"'const'", "'restrict'", "'volatile'", "'='", "';'", "'*='", "'/='", "'%='", 
		"'+='", "'-='", "'<<='", "'>>='", "'&='", "'^='", "'|='", "'('", "')'", 
		"'return'", "'{'", "'}'", "','", "'*'", "'/'", "'+'", "'-'", "'%'", "'&&'", 
		"'||'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'++'", "'&'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, "MUL", "DIV", "ADD", 
		"SUB", "MOD", "LOGICAL_AND", "LOGICAL_OR", "EQUALS", "NOT_EQUALS", "LESS", 
		"LESS_EQUAL", "GREATER", "GREATER_EQUAL", "POSTFIX_ADD", "VAR_ADDRESS", 
		"WHITESPACE", "DECIMAL", "FRACTION", "CHAR", "Identifier", "Pointer",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CLexer._LITERAL_NAMES, CLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "C.g4"; }

	// @Override
	public get ruleNames(): string[] { return CLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x027\u0177\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b" +
		"\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03" +
		"\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03" +
		"\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03" +
		"\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03" +
		"\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03" +
		"\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03" +
		"\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03" +
		"\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03" +
		" \x03!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'" +
		"\x03\'\x03\'\x03(\x03(\x03(\x03)\x03)\x03)\x03*\x03*\x03*\x03+\x03+\x03" +
		",\x03,\x03,\x03-\x03-\x03.\x03.\x03.\x03/\x03/\x03/\x030\x030\x031\x06" +
		"1\u0145\n1\r1\x0E1\u0146\x031\x031\x032\x062\u014C\n2\r2\x0E2\u014D\x03" +
		"3\x033\x034\x034\x034\x034\x035\x035\x036\x066\u0159\n6\r6\x0E6\u015A" +
		"\x037\x057\u015E\n7\x037\x037\x037\x037\x037\x057\u0165\n7\x038\x038\x03" +
		"8\x078\u016A\n8\f8\x0E8\u016D\v8\x039\x039\x039\x039\x079\u0173\n9\f9" +
		"\x0E9\u0176\v9\x02\x02\x02:\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02" +
		"\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02" +
		"\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%" +
		"\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B" +
		"5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02" +
		"%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_" +
		"\x021a\x022c\x023e\x024g\x025i\x02\x02k\x02\x02m\x02\x02o\x026q\x027\x03" +
		"\x02\x05\x05\x02\v\f\x0F\x0F\"\"\x03\x022;\x05\x02C\\aac|\x02\u017C\x02" +
		"\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02" +
		"\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F" +
		"\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15" +
		"\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B" +
		"\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!" +
		"\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02" +
		"\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02" +
		"\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03" +
		"\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02" +
		"\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02" +
		"C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02" +
		"\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02" +
		"\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03" +
		"\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02" +
		"\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02" +
		"e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02q\x03\x02" +
		"\x02\x02\x03s\x03\x02\x02\x02\x05x\x03\x02\x02\x02\x07}\x03\x02\x02\x02" +
		"\t\x8B\x03\x02\x02\x02\v\x91\x03\x02\x02\x02\r\xA0\x03\x02\x02\x02\x0F" +
		"\xA4\x03\x02\x02\x02\x11\xB1\x03\x02\x02\x02\x13\xB6\x03\x02\x02\x02\x15" +
		"\xC4\x03\x02\x02\x02\x17\xCA\x03\x02\x02\x02\x19\xD1\x03\x02\x02\x02\x1B" +
		"\xD7\x03\x02\x02\x02\x1D\xE0\x03\x02\x02\x02\x1F\xE9\x03\x02\x02\x02!" +
		"\xEB\x03\x02\x02\x02#\xED\x03\x02\x02\x02%\xF0\x03\x02\x02\x02\'\xF3\x03" +
		"\x02\x02\x02)\xF6\x03\x02\x02\x02+\xF9\x03\x02\x02\x02-\xFC\x03\x02\x02" +
		"\x02/\u0100\x03\x02\x02\x021\u0104\x03\x02\x02\x023\u0107\x03\x02\x02" +
		"\x025\u010A\x03\x02\x02\x027\u010D\x03\x02\x02\x029\u010F\x03\x02\x02" +
		"\x02;\u0111\x03\x02\x02\x02=\u0118\x03\x02\x02\x02?\u011A\x03\x02\x02" +
		"\x02A\u011C\x03\x02\x02\x02C\u011E\x03\x02\x02\x02E\u0120\x03\x02\x02" +
		"\x02G\u0122\x03\x02\x02\x02I\u0124\x03\x02\x02\x02K\u0126\x03\x02\x02" +
		"\x02M\u0128\x03\x02\x02\x02O\u012B\x03\x02\x02\x02Q\u012E\x03\x02\x02" +
		"\x02S\u0131\x03\x02\x02\x02U\u0134\x03\x02\x02\x02W\u0136\x03\x02\x02" +
		"\x02Y\u0139\x03\x02\x02\x02[\u013B\x03\x02\x02\x02]\u013E\x03\x02\x02" +
		"\x02_\u0141\x03\x02\x02\x02a\u0144\x03\x02\x02\x02c\u014B\x03\x02\x02" +
		"\x02e\u014F\x03\x02\x02\x02g\u0151\x03\x02\x02\x02i\u0155\x03\x02\x02" +
		"\x02k\u0158\x03\x02\x02\x02m\u0164\x03\x02\x02\x02o\u0166\x03\x02\x02" +
		"\x02q\u016E\x03\x02\x02\x02st\x07x\x02\x02tu\x07q\x02\x02uv\x07k\x02\x02" +
		"vw\x07f\x02\x02w\x04\x03\x02\x02\x02xy\x07e\x02\x02yz\x07j\x02\x02z{\x07" +
		"c\x02\x02{|\x07t\x02\x02|\x06\x03\x02\x02\x02}~\x07w\x02\x02~\x7F\x07" +
		"p\x02\x02\x7F\x80\x07u\x02\x02\x80\x81\x07k\x02\x02\x81\x82\x07i\x02\x02" +
		"\x82\x83\x07p\x02\x02\x83\x84\x07g\x02\x02\x84\x85\x07f\x02\x02\x85\x86" +
		"\x07\"\x02\x02\x86\x87\x07e\x02\x02\x87\x88\x07j\x02\x02\x88\x89\x07c" +
		"\x02\x02\x89\x8A\x07t\x02\x02\x8A\b\x03\x02\x02\x02\x8B\x8C\x07u\x02\x02" +
		"\x8C\x8D\x07j\x02\x02\x8D\x8E\x07q\x02\x02\x8E\x8F\x07t\x02\x02\x8F\x90" +
		"\x07v\x02\x02\x90\n\x03\x02\x02\x02\x91\x92\x07w\x02\x02\x92\x93\x07p" +
		"\x02\x02\x93\x94\x07u\x02\x02\x94\x95\x07k\x02\x02\x95\x96\x07i\x02\x02" +
		"\x96\x97\x07p\x02\x02\x97\x98\x07g\x02\x02\x98\x99\x07f\x02\x02\x99\x9A" +
		"\x07\"\x02\x02\x9A\x9B\x07u\x02\x02\x9B\x9C\x07j\x02\x02\x9C\x9D\x07q" +
		"\x02\x02\x9D\x9E\x07t\x02\x02\x9E\x9F\x07v\x02\x02\x9F\f\x03\x02\x02\x02" +
		"\xA0\xA1\x07k\x02\x02\xA1\xA2\x07p\x02\x02\xA2\xA3\x07v\x02\x02\xA3\x0E" +
		"\x03\x02\x02\x02\xA4\xA5\x07w\x02\x02\xA5\xA6\x07p\x02\x02\xA6\xA7\x07" +
		"u\x02\x02\xA7\xA8\x07k\x02\x02\xA8\xA9\x07i\x02\x02\xA9\xAA\x07p\x02\x02" +
		"\xAA\xAB\x07g\x02\x02\xAB\xAC\x07f\x02\x02\xAC\xAD\x07\"\x02\x02\xAD\xAE" +
		"\x07k\x02\x02\xAE\xAF\x07p\x02\x02\xAF\xB0\x07v\x02\x02\xB0\x10\x03\x02" +
		"\x02\x02\xB1\xB2\x07n\x02\x02\xB2\xB3\x07q\x02\x02\xB3\xB4\x07p\x02\x02" +
		"\xB4\xB5\x07i\x02\x02\xB5\x12\x03\x02\x02\x02\xB6\xB7\x07w\x02\x02\xB7" +
		"\xB8\x07p\x02\x02\xB8\xB9\x07u\x02\x02\xB9\xBA\x07k\x02\x02\xBA\xBB\x07" +
		"i\x02\x02\xBB\xBC\x07p\x02\x02\xBC\xBD\x07g\x02\x02\xBD\xBE\x07f\x02\x02" +
		"\xBE\xBF\x07\"\x02\x02\xBF\xC0\x07n\x02\x02\xC0\xC1\x07q\x02\x02\xC1\xC2" +
		"\x07p\x02\x02\xC2\xC3\x07i\x02\x02\xC3\x14\x03\x02\x02\x02\xC4\xC5\x07" +
		"h\x02\x02\xC5\xC6\x07n\x02\x02\xC6\xC7\x07q\x02\x02\xC7\xC8\x07c\x02\x02" +
		"\xC8\xC9\x07v\x02\x02\xC9\x16\x03\x02\x02\x02\xCA\xCB\x07f\x02\x02\xCB" +
		"\xCC\x07q\x02\x02\xCC\xCD\x07w\x02\x02\xCD\xCE\x07d\x02\x02\xCE\xCF\x07" +
		"n\x02\x02\xCF\xD0\x07g\x02\x02\xD0\x18\x03\x02\x02\x02\xD1\xD2\x07e\x02" +
		"\x02\xD2\xD3\x07q\x02\x02\xD3\xD4\x07p\x02\x02\xD4\xD5\x07u\x02\x02\xD5" +
		"\xD6\x07v\x02\x02\xD6\x1A\x03\x02\x02\x02\xD7\xD8\x07t\x02\x02\xD8\xD9" +
		"\x07g\x02\x02\xD9\xDA\x07u\x02\x02\xDA\xDB\x07v\x02\x02\xDB\xDC\x07t\x02" +
		"\x02\xDC\xDD\x07k\x02\x02\xDD\xDE\x07e\x02\x02\xDE\xDF\x07v\x02\x02\xDF" +
		"\x1C\x03\x02\x02\x02\xE0\xE1\x07x\x02\x02\xE1\xE2\x07q\x02\x02\xE2\xE3" +
		"\x07n\x02\x02\xE3\xE4\x07c\x02\x02\xE4\xE5\x07v\x02\x02\xE5\xE6\x07k\x02" +
		"\x02\xE6\xE7\x07n\x02\x02\xE7\xE8\x07g\x02\x02\xE8\x1E\x03\x02\x02\x02" +
		"\xE9\xEA\x07?\x02\x02\xEA \x03\x02\x02\x02\xEB\xEC\x07=\x02\x02\xEC\"" +
		"\x03\x02\x02\x02\xED\xEE\x07,\x02\x02\xEE\xEF\x07?\x02\x02\xEF$\x03\x02" +
		"\x02\x02\xF0\xF1\x071\x02\x02\xF1\xF2\x07?\x02\x02\xF2&\x03\x02\x02\x02" +
		"\xF3\xF4\x07\'\x02\x02\xF4\xF5\x07?\x02\x02\xF5(\x03\x02\x02\x02\xF6\xF7" +
		"\x07-\x02\x02\xF7\xF8\x07?\x02\x02\xF8*\x03\x02\x02\x02\xF9\xFA\x07/\x02" +
		"\x02\xFA\xFB\x07?\x02\x02\xFB,\x03\x02\x02\x02\xFC\xFD\x07>\x02\x02\xFD" +
		"\xFE\x07>\x02\x02\xFE\xFF\x07?\x02\x02\xFF.\x03\x02\x02\x02\u0100\u0101" +
		"\x07@\x02\x02\u0101\u0102\x07@\x02\x02\u0102\u0103\x07?\x02\x02\u0103" +
		"0\x03\x02\x02\x02\u0104\u0105\x07(\x02\x02\u0105\u0106\x07?\x02\x02\u0106" +
		"2\x03\x02\x02\x02\u0107\u0108\x07`\x02\x02\u0108\u0109\x07?\x02\x02\u0109" +
		"4\x03\x02\x02\x02\u010A\u010B\x07~\x02\x02\u010B\u010C\x07?\x02\x02\u010C" +
		"6\x03\x02\x02\x02\u010D\u010E\x07*\x02\x02\u010E8\x03\x02\x02\x02\u010F" +
		"\u0110\x07+\x02\x02\u0110:\x03\x02\x02\x02\u0111\u0112\x07t\x02\x02\u0112" +
		"\u0113\x07g\x02\x02\u0113\u0114\x07v\x02\x02\u0114\u0115\x07w\x02\x02" +
		"\u0115\u0116\x07t\x02\x02\u0116\u0117\x07p\x02\x02\u0117<\x03\x02\x02" +
		"\x02\u0118\u0119\x07}\x02\x02\u0119>\x03\x02\x02\x02\u011A\u011B\x07\x7F" +
		"\x02\x02\u011B@\x03\x02\x02\x02\u011C\u011D\x07.\x02\x02\u011DB\x03\x02" +
		"\x02\x02\u011E\u011F\x07,\x02\x02\u011FD\x03\x02\x02\x02\u0120\u0121\x07" +
		"1\x02\x02\u0121F\x03\x02\x02\x02\u0122\u0123\x07-\x02\x02\u0123H\x03\x02" +
		"\x02\x02\u0124\u0125\x07/\x02\x02\u0125J\x03\x02\x02\x02\u0126\u0127\x07" +
		"\'\x02\x02\u0127L\x03\x02\x02\x02\u0128\u0129\x07(\x02\x02\u0129\u012A" +
		"\x07(\x02\x02\u012AN\x03\x02\x02\x02\u012B\u012C\x07~\x02\x02\u012C\u012D" +
		"\x07~\x02\x02\u012DP\x03\x02\x02\x02\u012E\u012F\x07?\x02\x02\u012F\u0130" +
		"\x07?\x02\x02\u0130R\x03\x02\x02\x02\u0131\u0132\x07#\x02\x02\u0132\u0133" +
		"\x07?\x02\x02\u0133T\x03\x02\x02\x02\u0134\u0135\x07>\x02\x02\u0135V\x03" +
		"\x02\x02\x02\u0136\u0137\x07>\x02\x02\u0137\u0138\x07?\x02\x02\u0138X" +
		"\x03\x02\x02\x02\u0139\u013A\x07@\x02\x02\u013AZ\x03\x02\x02\x02\u013B" +
		"\u013C\x07@\x02\x02\u013C\u013D\x07?\x02\x02\u013D\\\x03\x02\x02\x02\u013E" +
		"\u013F\x07-\x02\x02\u013F\u0140\x07-\x02\x02\u0140^\x03\x02\x02\x02\u0141" +
		"\u0142\x07(\x02\x02\u0142`\x03\x02\x02\x02\u0143\u0145\t\x02\x02\x02\u0144" +
		"\u0143\x03\x02\x02\x02\u0145\u0146\x03\x02\x02\x02\u0146\u0144\x03\x02" +
		"\x02\x02\u0146\u0147\x03\x02\x02\x02\u0147\u0148\x03\x02\x02\x02\u0148" +
		"\u0149\b1\x02\x02\u0149b\x03\x02\x02\x02\u014A\u014C\t\x03\x02\x02\u014B" +
		"\u014A\x03\x02\x02\x02\u014C\u014D\x03\x02\x02\x02\u014D\u014B\x03\x02" +
		"\x02\x02\u014D\u014E\x03\x02\x02\x02\u014Ed\x03\x02\x02\x02\u014F\u0150" +
		"\x05m7\x02\u0150f\x03\x02\x02\x02\u0151\u0152\x07)\x02\x02\u0152\u0153" +
		"\x05i5\x02\u0153\u0154\x07)\x02\x02\u0154h\x03\x02\x02\x02\u0155\u0156" +
		"\t\x04\x02\x02\u0156j\x03\x02\x02\x02\u0157\u0159\t\x03\x02\x02\u0158" +
		"\u0157\x03\x02\x02\x02\u0159\u015A\x03\x02\x02\x02\u015A\u0158\x03\x02" +
		"\x02\x02\u015A\u015B\x03\x02\x02\x02\u015Bl\x03\x02\x02\x02\u015C\u015E" +
		"\x05k6\x02\u015D\u015C\x03\x02\x02\x02\u015D\u015E\x03\x02\x02\x02\u015E" +
		"\u015F\x03\x02\x02\x02\u015F\u0160\x070\x02\x02\u0160\u0165\x05k6\x02" +
		"\u0161\u0162\x05k6\x02\u0162\u0163\x070\x02\x02\u0163\u0165\x03\x02\x02" +
		"\x02\u0164\u015D\x03\x02\x02\x02\u0164\u0161\x03\x02\x02\x02\u0165n\x03" +
		"\x02\x02\x02\u0166\u016B\x05i5\x02\u0167\u016A\x05i5\x02\u0168\u016A\x05" +
		"k6\x02\u0169\u0167\x03\x02\x02\x02\u0169\u0168\x03\x02\x02\x02\u016A\u016D" +
		"\x03\x02\x02\x02\u016B\u0169\x03\x02\x02\x02\u016B\u016C\x03\x02\x02\x02" +
		"\u016Cp\x03\x02\x02\x02\u016D\u016B\x03\x02\x02\x02\u016E\u016F\x07,\x02" +
		"\x02\u016F\u0174\x05i5\x02\u0170\u0173\x05i5\x02\u0171\u0173\x05k6\x02" +
		"\u0172\u0170\x03\x02\x02\x02\u0172\u0171\x03\x02\x02\x02\u0173\u0176\x03" +
		"\x02\x02\x02\u0174\u0172\x03\x02\x02\x02\u0174\u0175\x03\x02\x02\x02\u0175" +
		"r\x03\x02\x02\x02\u0176\u0174\x03\x02\x02\x02\f\x02\u0146\u014D\u015A" +
		"\u015D\u0164\u0169\u016B\u0172\u0174\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CLexer.__ATN) {
			CLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CLexer._serializedATN));
		}

		return CLexer.__ATN;
	}

}

