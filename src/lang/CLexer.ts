// Generated from C.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class CLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly MUL = 31;
	public static readonly DIV = 32;
	public static readonly ADD = 33;
	public static readonly SUB = 34;
	public static readonly MOD = 35;
	public static readonly LOGICAL_AND = 36;
	public static readonly LOGICAL_OR = 37;
	public static readonly EQUALS = 38;
	public static readonly LESS = 39;
	public static readonly LESS_EQUAL = 40;
	public static readonly GREATER = 41;
	public static readonly GREATER_EQUAL = 42;
	public static readonly POSTFIX_ADD = 43;
	public static readonly WHITESPACE = 44;
	public static readonly DECIMAL = 45;
	public static readonly FRACTION = 46;
	public static readonly Identifier = 47;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "MUL", "DIV", "ADD", "SUB", 
		"MOD", "LOGICAL_AND", "LOGICAL_OR", "EQUALS", "LESS", "LESS_EQUAL", "GREATER", 
		"GREATER_EQUAL", "POSTFIX_ADD", "WHITESPACE", "DECIMAL", "FRACTION", "Nondigit", 
		"Digit", "Fraction", "Identifier",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'void'", "'char'", "'short'", "'int'", "'long'", "'float'", 
		"'double'", "'signed'", "'unsigned'", "'const'", "'restrict'", "'volatile'", 
		"'='", "';'", "'*='", "'/='", "'%='", "'+='", "'-='", "'<<='", "'>>='", 
		"'&='", "'^='", "'|='", "'('", "')'", "'if'", "'else'", "'{'", "'}'", 
		"'*'", "'/'", "'+'", "'-'", "'%'", "'&&'", "'||'", "'=='", "'<'", "'<='", 
		"'>'", "'>='", "'++'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "MUL", "DIV", "ADD", "SUB", "MOD", "LOGICAL_AND", 
		"LOGICAL_OR", "EQUALS", "LESS", "LESS_EQUAL", "GREATER", "GREATER_EQUAL", 
		"POSTFIX_ADD", "WHITESPACE", "DECIMAL", "FRACTION", "Identifier",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CLexer._LITERAL_NAMES, CLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "C.g4"; }

	// @Override
	public get ruleNames(): string[] { return CLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x021\u0130\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x03" +
		"\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b" +
		"\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03" +
		"\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03" +
		"\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03" +
		"\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03" +
		"\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03" +
		"\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%" +
		"\x03%\x03%\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03(\x03(\x03)\x03)\x03)\x03" +
		"*\x03*\x03+\x03+\x03+\x03,\x03,\x03,\x03-\x06-\u010B\n-\r-\x0E-\u010C" +
		"\x03-\x03-\x03.\x06.\u0112\n.\r.\x0E.\u0113\x03/\x03/\x030\x030\x031\x06" +
		"1\u011B\n1\r1\x0E1\u011C\x032\x052\u0120\n2\x032\x032\x032\x032\x032\x05" +
		"2\u0127\n2\x033\x033\x033\x073\u012C\n3\f3\x0E3\u012F\v3\x02\x02\x024" +
		"\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02" +
		"\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D" +
		"\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02" +
		"\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02" +
		"\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02" +
		"*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x02\x02a\x02\x02c\x02\x02e\x02" +
		"1\x03\x02\x05\x05\x02\v\f\x0F\x0F\"\"\x03\x022;\x05\x02C\\aac|\x02\u0133" +
		"\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
		"\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
		"\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
		"\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
		"\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
		"!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03" +
		"\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02" +
		"\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x02" +
		"5\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02" +
		"\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02" +
		"\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03" +
		"\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02" +
		"\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02" +
		"W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02" +
		"\x02\x02\x02e\x03\x02\x02\x02\x03g\x03\x02\x02\x02\x05l\x03\x02\x02\x02" +
		"\x07q\x03\x02\x02\x02\tw\x03\x02\x02\x02\v{\x03\x02\x02\x02\r\x80\x03" +
		"\x02\x02\x02\x0F\x86\x03\x02\x02\x02\x11\x8D\x03\x02\x02\x02\x13\x94\x03" +
		"\x02\x02\x02\x15\x9D\x03\x02\x02\x02\x17\xA3\x03\x02\x02\x02\x19\xAC\x03" +
		"\x02\x02\x02\x1B\xB5\x03\x02\x02\x02\x1D\xB7\x03\x02\x02\x02\x1F\xB9\x03" +
		"\x02\x02\x02!\xBC\x03\x02\x02\x02#\xBF\x03\x02\x02\x02%\xC2\x03\x02\x02" +
		"\x02\'\xC5\x03\x02\x02\x02)\xC8\x03\x02\x02\x02+\xCC\x03\x02\x02\x02-" +
		"\xD0\x03\x02\x02\x02/\xD3\x03\x02\x02\x021\xD6\x03\x02\x02\x023\xD9\x03" +
		"\x02\x02\x025\xDB\x03\x02\x02\x027\xDD\x03\x02\x02\x029\xE0\x03\x02\x02" +
		"\x02;\xE5\x03\x02\x02\x02=\xE7\x03\x02\x02\x02?\xE9\x03\x02\x02\x02A\xEB" +
		"\x03\x02\x02\x02C\xED\x03\x02\x02\x02E\xEF\x03\x02\x02\x02G\xF1\x03\x02" +
		"\x02\x02I\xF3\x03\x02\x02\x02K\xF6\x03\x02\x02\x02M\xF9\x03\x02\x02\x02" +
		"O\xFC\x03\x02\x02\x02Q\xFE\x03\x02\x02\x02S\u0101\x03\x02\x02\x02U\u0103" +
		"\x03\x02\x02\x02W\u0106\x03\x02\x02\x02Y\u010A\x03\x02\x02\x02[\u0111" +
		"\x03\x02\x02\x02]\u0115\x03\x02\x02\x02_\u0117\x03\x02\x02\x02a\u011A" +
		"\x03\x02\x02\x02c\u0126\x03\x02\x02\x02e\u0128\x03\x02\x02\x02gh\x07x" +
		"\x02\x02hi\x07q\x02\x02ij\x07k\x02\x02jk\x07f\x02\x02k\x04\x03\x02\x02" +
		"\x02lm\x07e\x02\x02mn\x07j\x02\x02no\x07c\x02\x02op\x07t\x02\x02p\x06" +
		"\x03\x02\x02\x02qr\x07u\x02\x02rs\x07j\x02\x02st\x07q\x02\x02tu\x07t\x02" +
		"\x02uv\x07v\x02\x02v\b\x03\x02\x02\x02wx\x07k\x02\x02xy\x07p\x02\x02y" +
		"z\x07v\x02\x02z\n\x03\x02\x02\x02{|\x07n\x02\x02|}\x07q\x02\x02}~\x07" +
		"p\x02\x02~\x7F\x07i\x02\x02\x7F\f\x03\x02\x02\x02\x80\x81\x07h\x02\x02" +
		"\x81\x82\x07n\x02\x02\x82\x83\x07q\x02\x02\x83\x84\x07c\x02\x02\x84\x85" +
		"\x07v\x02\x02\x85\x0E\x03\x02\x02\x02\x86\x87\x07f\x02\x02\x87\x88\x07" +
		"q\x02\x02\x88\x89\x07w\x02\x02\x89\x8A\x07d\x02\x02\x8A\x8B\x07n\x02\x02" +
		"\x8B\x8C\x07g\x02\x02\x8C\x10\x03\x02\x02\x02\x8D\x8E\x07u\x02\x02\x8E" +
		"\x8F\x07k\x02\x02\x8F\x90\x07i\x02\x02\x90\x91\x07p\x02\x02\x91\x92\x07" +
		"g\x02\x02\x92\x93\x07f\x02\x02\x93\x12\x03\x02\x02\x02\x94\x95\x07w\x02" +
		"\x02\x95\x96\x07p\x02\x02\x96\x97\x07u\x02\x02\x97\x98\x07k\x02\x02\x98" +
		"\x99\x07i\x02\x02\x99\x9A\x07p\x02\x02\x9A\x9B\x07g\x02\x02\x9B\x9C\x07" +
		"f\x02\x02\x9C\x14\x03\x02\x02\x02\x9D\x9E\x07e\x02\x02\x9E\x9F\x07q\x02" +
		"\x02\x9F\xA0\x07p\x02\x02\xA0\xA1\x07u\x02\x02\xA1\xA2\x07v\x02\x02\xA2" +
		"\x16\x03\x02\x02\x02\xA3\xA4\x07t\x02\x02\xA4\xA5\x07g\x02\x02\xA5\xA6" +
		"\x07u\x02\x02\xA6\xA7\x07v\x02\x02\xA7\xA8\x07t\x02\x02\xA8\xA9\x07k\x02" +
		"\x02\xA9\xAA\x07e\x02\x02\xAA\xAB\x07v\x02\x02\xAB\x18\x03\x02\x02\x02" +
		"\xAC\xAD\x07x\x02\x02\xAD\xAE\x07q\x02\x02\xAE\xAF\x07n\x02\x02\xAF\xB0" +
		"\x07c\x02\x02\xB0\xB1\x07v\x02\x02\xB1\xB2\x07k\x02\x02\xB2\xB3\x07n\x02" +
		"\x02\xB3\xB4\x07g\x02\x02\xB4\x1A\x03\x02\x02\x02\xB5\xB6\x07?\x02\x02" +
		"\xB6\x1C\x03\x02\x02\x02\xB7\xB8\x07=\x02\x02\xB8\x1E\x03\x02\x02\x02" +
		"\xB9\xBA\x07,\x02\x02\xBA\xBB\x07?\x02\x02\xBB \x03\x02\x02\x02\xBC\xBD" +
		"\x071\x02\x02\xBD\xBE\x07?\x02\x02\xBE\"\x03\x02\x02\x02\xBF\xC0\x07\'" +
		"\x02\x02\xC0\xC1\x07?\x02\x02\xC1$\x03\x02\x02\x02\xC2\xC3\x07-\x02\x02" +
		"\xC3\xC4\x07?\x02\x02\xC4&\x03\x02\x02\x02\xC5\xC6\x07/\x02\x02\xC6\xC7" +
		"\x07?\x02\x02\xC7(\x03\x02\x02\x02\xC8\xC9\x07>\x02\x02\xC9\xCA\x07>\x02" +
		"\x02\xCA\xCB\x07?\x02\x02\xCB*\x03\x02\x02\x02\xCC\xCD\x07@\x02\x02\xCD" +
		"\xCE\x07@\x02\x02\xCE\xCF\x07?\x02\x02\xCF,\x03\x02\x02\x02\xD0\xD1\x07" +
		"(\x02\x02\xD1\xD2\x07?\x02\x02\xD2.\x03\x02\x02\x02\xD3\xD4\x07`\x02\x02" +
		"\xD4\xD5\x07?\x02\x02\xD50\x03\x02\x02\x02\xD6\xD7\x07~\x02\x02\xD7\xD8" +
		"\x07?\x02\x02\xD82\x03\x02\x02\x02\xD9\xDA\x07*\x02\x02\xDA4\x03\x02\x02" +
		"\x02\xDB\xDC\x07+\x02\x02\xDC6\x03\x02\x02\x02\xDD\xDE\x07k\x02\x02\xDE" +
		"\xDF\x07h\x02\x02\xDF8\x03\x02\x02\x02\xE0\xE1\x07g\x02\x02\xE1\xE2\x07" +
		"n\x02\x02\xE2\xE3\x07u\x02\x02\xE3\xE4\x07g\x02\x02\xE4:\x03\x02\x02\x02" +
		"\xE5\xE6\x07}\x02\x02\xE6<\x03\x02\x02\x02\xE7\xE8\x07\x7F\x02\x02\xE8" +
		">\x03\x02\x02\x02\xE9\xEA\x07,\x02\x02\xEA@\x03\x02\x02\x02\xEB\xEC\x07" +
		"1\x02\x02\xECB\x03\x02\x02\x02\xED\xEE\x07-\x02\x02\xEED\x03\x02\x02\x02" +
		"\xEF\xF0\x07/\x02\x02\xF0F\x03\x02\x02\x02\xF1\xF2\x07\'\x02\x02\xF2H" +
		"\x03\x02\x02\x02\xF3\xF4\x07(\x02\x02\xF4\xF5\x07(\x02\x02\xF5J\x03\x02" +
		"\x02\x02\xF6\xF7\x07~\x02\x02\xF7\xF8\x07~\x02\x02\xF8L\x03\x02\x02\x02" +
		"\xF9\xFA\x07?\x02\x02\xFA\xFB\x07?\x02\x02\xFBN\x03\x02\x02\x02\xFC\xFD" +
		"\x07>\x02\x02\xFDP\x03\x02\x02\x02\xFE\xFF\x07>\x02\x02\xFF\u0100\x07" +
		"?\x02\x02\u0100R\x03\x02\x02\x02\u0101\u0102\x07@\x02\x02\u0102T\x03\x02" +
		"\x02\x02\u0103\u0104\x07@\x02\x02\u0104\u0105\x07?\x02\x02\u0105V\x03" +
		"\x02\x02\x02\u0106\u0107\x07-\x02\x02\u0107\u0108\x07-\x02\x02\u0108X" +
		"\x03\x02\x02\x02\u0109\u010B\t\x02\x02\x02\u010A\u0109\x03\x02\x02\x02" +
		"\u010B\u010C\x03\x02\x02\x02\u010C\u010A\x03\x02\x02\x02\u010C\u010D\x03" +
		"\x02\x02\x02\u010D\u010E\x03\x02\x02\x02\u010E\u010F\b-\x02\x02\u010F" +
		"Z\x03\x02\x02\x02\u0110\u0112\t\x03\x02\x02\u0111\u0110\x03\x02\x02\x02" +
		"\u0112\u0113\x03\x02\x02\x02\u0113\u0111\x03\x02\x02\x02\u0113\u0114\x03" +
		"\x02\x02\x02\u0114\\\x03\x02\x02\x02\u0115\u0116\x05c2\x02\u0116^\x03" +
		"\x02\x02\x02\u0117\u0118\t\x04\x02\x02\u0118`\x03\x02\x02\x02\u0119\u011B" +
		"\t\x03\x02\x02\u011A\u0119\x03\x02\x02\x02\u011B\u011C\x03\x02\x02\x02" +
		"\u011C\u011A\x03\x02\x02\x02\u011C\u011D\x03\x02\x02\x02\u011Db\x03\x02" +
		"\x02\x02\u011E\u0120\x05a1\x02\u011F\u011E\x03\x02\x02\x02\u011F\u0120" +
		"\x03\x02\x02\x02\u0120\u0121\x03\x02\x02\x02\u0121\u0122\x070\x02\x02" +
		"\u0122\u0127\x05a1\x02\u0123\u0124\x05a1\x02\u0124\u0125\x070\x02\x02" +
		"\u0125\u0127\x03\x02\x02\x02\u0126\u011F\x03\x02\x02\x02\u0126\u0123\x03" +
		"\x02\x02\x02\u0127d\x03\x02\x02\x02\u0128\u012D\x05_0\x02\u0129\u012C" +
		"\x05_0\x02\u012A\u012C\x05a1\x02\u012B\u0129\x03\x02\x02\x02\u012B\u012A" +
		"\x03\x02\x02\x02\u012C\u012F\x03\x02\x02\x02\u012D\u012B\x03\x02\x02\x02" +
		"\u012D\u012E\x03\x02\x02\x02\u012Ef\x03\x02\x02\x02\u012F\u012D\x03\x02" +
		"\x02\x02\n\x02\u010C\u0113\u011C\u011F\u0126\u012B\u012D\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CLexer.__ATN) {
			CLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CLexer._serializedATN));
		}

		return CLexer.__ATN;
	}

}

