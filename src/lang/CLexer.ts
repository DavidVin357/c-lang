// Generated from C.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class CLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly MUL = 35;
	public static readonly DIV = 36;
	public static readonly ADD = 37;
	public static readonly SUB = 38;
	public static readonly MOD = 39;
	public static readonly LOGICAL_AND = 40;
	public static readonly LOGICAL_OR = 41;
	public static readonly EQUALS = 42;
	public static readonly LESS = 43;
	public static readonly LESS_EQUAL = 44;
	public static readonly GREATER = 45;
	public static readonly GREATER_EQUAL = 46;
	public static readonly POSTFIX_ADD = 47;
	public static readonly WHITESPACE = 48;
	public static readonly DECIMAL = 49;
	public static readonly FRACTION = 50;
	public static readonly Identifier = 51;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "MUL", "DIV", "ADD", "SUB", "MOD", "LOGICAL_AND", "LOGICAL_OR", 
		"EQUALS", "LESS", "LESS_EQUAL", "GREATER", "GREATER_EQUAL", "POSTFIX_ADD", 
		"WHITESPACE", "DECIMAL", "FRACTION", "Nondigit", "Digit", "Fraction", 
		"Identifier",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'void'", "'char'", "'short'", "'int'", "'long'", "'float'", 
		"'double'", "'signed'", "'unsigned'", "'const'", "'restrict'", "'volatile'", 
		"'='", "';'", "'*='", "'/='", "'%='", "'+='", "'-='", "'<<='", "'>>='", 
		"'&='", "'^='", "'|='", "'('", "')'", "'if'", "'else'", "'switch'", "'case'", 
		"':'", "'default'", "'{'", "'}'", "'*'", "'/'", "'+'", "'-'", "'%'", "'&&'", 
		"'||'", "'=='", "'<'", "'<='", "'>'", "'>='", "'++'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		"MUL", "DIV", "ADD", "SUB", "MOD", "LOGICAL_AND", "LOGICAL_OR", "EQUALS", 
		"LESS", "LESS_EQUAL", "GREATER", "GREATER_EQUAL", "POSTFIX_ADD", "WHITESPACE", 
		"DECIMAL", "FRACTION", "Identifier",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CLexer._LITERAL_NAMES, CLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "C.g4"; }

	// @Override
	public get ruleNames(): string[] { return CLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x025\u014E\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03" +
		"\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E" +
		"\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12" +
		"\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15" +
		"\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17" +
		"\x03\x17\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A" +
		"\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D" +
		"\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F" +
		"\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03" +
		"!\x03!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'" +
		"\x03\'\x03(\x03(\x03)\x03)\x03)\x03*\x03*\x03*\x03+\x03+\x03+\x03,\x03" +
		",\x03-\x03-\x03-\x03.\x03.\x03/\x03/\x03/\x030\x030\x030\x031\x061\u0129" +
		"\n1\r1\x0E1\u012A\x031\x031\x032\x062\u0130\n2\r2\x0E2\u0131\x033\x03" +
		"3\x034\x034\x035\x065\u0139\n5\r5\x0E5\u013A\x036\x056\u013E\n6\x036\x03" +
		"6\x036\x036\x036\x056\u0145\n6\x037\x037\x037\x077\u014A\n7\f7\x0E7\u014D" +
		"\v7\x02\x02\x028\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07" +
		"\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E" +
		"\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02" +
		"\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02" +
		"\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02" +
		"\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c" +
		"\x023e\x024g\x02\x02i\x02\x02k\x02\x02m\x025\x03\x02\x05\x05\x02\v\f\x0F" +
		"\x0F\"\"\x03\x022;\x05\x02C\\aac|\x02\u0151\x02\x03\x03\x02\x02\x02\x02" +
		"\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02" +
		"\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11" +
		"\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17" +
		"\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D" +
		"\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03" +
		"\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02" +
		"\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x02" +
		"1\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02" +
		"\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02" +
		"\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03" +
		"\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02" +
		"\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02" +
		"S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02" +
		"\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02" +
		"\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02m\x03" +
		"\x02\x02\x02\x03o\x03\x02\x02\x02\x05t\x03\x02\x02\x02\x07y\x03\x02\x02" +
		"\x02\t\x7F\x03\x02\x02\x02\v\x83\x03\x02\x02\x02\r\x88\x03\x02\x02\x02" +
		"\x0F\x8E\x03\x02\x02\x02\x11\x95\x03\x02\x02\x02\x13\x9C\x03\x02\x02\x02" +
		"\x15\xA5\x03\x02\x02\x02\x17\xAB\x03\x02\x02\x02\x19\xB4\x03\x02\x02\x02" +
		"\x1B\xBD\x03\x02\x02\x02\x1D\xBF\x03\x02\x02\x02\x1F\xC1\x03\x02\x02\x02" +
		"!\xC4\x03\x02\x02\x02#\xC7\x03\x02\x02\x02%\xCA\x03\x02\x02\x02\'\xCD" +
		"\x03\x02\x02\x02)\xD0\x03\x02\x02\x02+\xD4\x03\x02\x02\x02-\xD8\x03\x02" +
		"\x02\x02/\xDB\x03\x02\x02\x021\xDE\x03\x02\x02\x023\xE1\x03\x02\x02\x02" +
		"5\xE3\x03\x02\x02\x027\xE5\x03\x02\x02\x029\xE8\x03\x02\x02\x02;\xED\x03" +
		"\x02\x02\x02=\xF4\x03\x02\x02\x02?\xF9\x03\x02\x02\x02A\xFB\x03\x02\x02" +
		"\x02C\u0103\x03\x02\x02\x02E\u0105\x03\x02\x02\x02G\u0107\x03\x02\x02" +
		"\x02I\u0109\x03\x02\x02\x02K\u010B\x03\x02\x02\x02M\u010D\x03\x02\x02" +
		"\x02O\u010F\x03\x02\x02\x02Q\u0111\x03\x02\x02\x02S\u0114\x03\x02\x02" +
		"\x02U\u0117\x03\x02\x02\x02W\u011A\x03\x02\x02\x02Y\u011C\x03\x02\x02" +
		"\x02[\u011F\x03\x02\x02\x02]\u0121\x03\x02\x02\x02_\u0124\x03\x02\x02" +
		"\x02a\u0128\x03\x02\x02\x02c\u012F\x03\x02\x02\x02e\u0133\x03\x02\x02" +
		"\x02g\u0135\x03\x02\x02\x02i\u0138\x03\x02\x02\x02k\u0144\x03\x02\x02" +
		"\x02m\u0146\x03\x02\x02\x02op\x07x\x02\x02pq\x07q\x02\x02qr\x07k\x02\x02" +
		"rs\x07f\x02\x02s\x04\x03\x02\x02\x02tu\x07e\x02\x02uv\x07j\x02\x02vw\x07" +
		"c\x02\x02wx\x07t\x02\x02x\x06\x03\x02\x02\x02yz\x07u\x02\x02z{\x07j\x02" +
		"\x02{|\x07q\x02\x02|}\x07t\x02\x02}~\x07v\x02\x02~\b\x03\x02\x02\x02\x7F" +
		"\x80\x07k\x02\x02\x80\x81\x07p\x02\x02\x81\x82\x07v\x02\x02\x82\n\x03" +
		"\x02\x02\x02\x83\x84\x07n\x02\x02\x84\x85\x07q\x02\x02\x85\x86\x07p\x02" +
		"\x02\x86\x87\x07i\x02\x02\x87\f\x03\x02\x02\x02\x88\x89\x07h\x02\x02\x89" +
		"\x8A\x07n\x02\x02\x8A\x8B\x07q\x02\x02\x8B\x8C\x07c\x02\x02\x8C\x8D\x07" +
		"v\x02\x02\x8D\x0E\x03\x02\x02\x02\x8E\x8F\x07f\x02\x02\x8F\x90\x07q\x02" +
		"\x02\x90\x91\x07w\x02\x02\x91\x92\x07d\x02\x02\x92\x93\x07n\x02\x02\x93" +
		"\x94\x07g\x02\x02\x94\x10\x03\x02\x02\x02\x95\x96\x07u\x02\x02\x96\x97" +
		"\x07k\x02\x02\x97\x98\x07i\x02\x02\x98\x99\x07p\x02\x02\x99\x9A\x07g\x02" +
		"\x02\x9A\x9B\x07f\x02\x02\x9B\x12\x03\x02\x02\x02\x9C\x9D\x07w\x02\x02" +
		"\x9D\x9E\x07p\x02\x02\x9E\x9F\x07u\x02\x02\x9F\xA0\x07k\x02\x02\xA0\xA1" +
		"\x07i\x02\x02\xA1\xA2\x07p\x02\x02\xA2\xA3\x07g\x02\x02\xA3\xA4\x07f\x02" +
		"\x02\xA4\x14\x03\x02\x02\x02\xA5\xA6\x07e\x02\x02\xA6\xA7\x07q\x02\x02" +
		"\xA7\xA8\x07p\x02\x02\xA8\xA9\x07u\x02\x02\xA9\xAA\x07v\x02\x02\xAA\x16" +
		"\x03\x02\x02\x02\xAB\xAC\x07t\x02\x02\xAC\xAD\x07g\x02\x02\xAD\xAE\x07" +
		"u\x02\x02\xAE\xAF\x07v\x02\x02\xAF\xB0\x07t\x02\x02\xB0\xB1\x07k\x02\x02" +
		"\xB1\xB2\x07e\x02\x02\xB2\xB3\x07v\x02\x02\xB3\x18\x03\x02\x02\x02\xB4" +
		"\xB5\x07x\x02\x02\xB5\xB6\x07q\x02\x02\xB6\xB7\x07n\x02\x02\xB7\xB8\x07" +
		"c\x02\x02\xB8\xB9\x07v\x02\x02\xB9\xBA\x07k\x02\x02\xBA\xBB\x07n\x02\x02" +
		"\xBB\xBC\x07g\x02\x02\xBC\x1A\x03\x02\x02\x02\xBD\xBE\x07?\x02\x02\xBE" +
		"\x1C\x03\x02\x02\x02\xBF\xC0\x07=\x02\x02\xC0\x1E\x03\x02\x02\x02\xC1" +
		"\xC2\x07,\x02\x02\xC2\xC3\x07?\x02\x02\xC3 \x03\x02\x02\x02\xC4\xC5\x07" +
		"1\x02\x02\xC5\xC6\x07?\x02\x02\xC6\"\x03\x02\x02\x02\xC7\xC8\x07\'\x02" +
		"\x02\xC8\xC9\x07?\x02\x02\xC9$\x03\x02\x02\x02\xCA\xCB\x07-\x02\x02\xCB" +
		"\xCC\x07?\x02\x02\xCC&\x03\x02\x02\x02\xCD\xCE\x07/\x02\x02\xCE\xCF\x07" +
		"?\x02\x02\xCF(\x03\x02\x02\x02\xD0\xD1\x07>\x02\x02\xD1\xD2\x07>\x02\x02" +
		"\xD2\xD3\x07?\x02\x02\xD3*\x03\x02\x02\x02\xD4\xD5\x07@\x02\x02\xD5\xD6" +
		"\x07@\x02\x02\xD6\xD7\x07?\x02\x02\xD7,\x03\x02\x02\x02\xD8\xD9\x07(\x02" +
		"\x02\xD9\xDA\x07?\x02\x02\xDA.\x03\x02\x02\x02\xDB\xDC\x07`\x02\x02\xDC" +
		"\xDD\x07?\x02\x02\xDD0\x03\x02\x02\x02\xDE\xDF\x07~\x02\x02\xDF\xE0\x07" +
		"?\x02\x02\xE02\x03\x02\x02\x02\xE1\xE2\x07*\x02\x02\xE24\x03\x02\x02\x02" +
		"\xE3\xE4\x07+\x02\x02\xE46\x03\x02\x02\x02\xE5\xE6\x07k\x02\x02\xE6\xE7" +
		"\x07h\x02\x02\xE78\x03\x02\x02\x02\xE8\xE9\x07g\x02\x02\xE9\xEA\x07n\x02" +
		"\x02\xEA\xEB\x07u\x02\x02\xEB\xEC\x07g\x02\x02\xEC:\x03\x02\x02\x02\xED" +
		"\xEE\x07u\x02\x02\xEE\xEF\x07y\x02\x02\xEF\xF0\x07k\x02\x02\xF0\xF1\x07" +
		"v\x02\x02\xF1\xF2\x07e\x02\x02\xF2\xF3\x07j\x02\x02\xF3<\x03\x02\x02\x02" +
		"\xF4\xF5\x07e\x02\x02\xF5\xF6\x07c\x02\x02\xF6\xF7\x07u\x02\x02\xF7\xF8" +
		"\x07g\x02\x02\xF8>\x03\x02\x02\x02\xF9\xFA\x07<\x02\x02\xFA@\x03\x02\x02" +
		"\x02\xFB\xFC\x07f\x02\x02\xFC\xFD\x07g\x02\x02\xFD\xFE\x07h\x02\x02\xFE" +
		"\xFF\x07c\x02\x02\xFF\u0100\x07w\x02\x02\u0100\u0101\x07n\x02\x02\u0101" +
		"\u0102\x07v\x02\x02\u0102B\x03\x02\x02\x02\u0103\u0104\x07}\x02\x02\u0104" +
		"D\x03\x02\x02\x02\u0105\u0106\x07\x7F\x02\x02\u0106F\x03\x02\x02\x02\u0107" +
		"\u0108\x07,\x02\x02\u0108H\x03\x02\x02\x02\u0109\u010A\x071\x02\x02\u010A" +
		"J\x03\x02\x02\x02\u010B\u010C\x07-\x02\x02\u010CL\x03\x02\x02\x02\u010D" +
		"\u010E\x07/\x02\x02\u010EN\x03\x02\x02\x02\u010F\u0110\x07\'\x02\x02\u0110" +
		"P\x03\x02\x02\x02\u0111\u0112\x07(\x02\x02\u0112\u0113\x07(\x02\x02\u0113" +
		"R\x03\x02\x02\x02\u0114\u0115\x07~\x02\x02\u0115\u0116\x07~\x02\x02\u0116" +
		"T\x03\x02\x02\x02\u0117\u0118\x07?\x02\x02\u0118\u0119\x07?\x02\x02\u0119" +
		"V\x03\x02\x02\x02\u011A\u011B\x07>\x02\x02\u011BX\x03\x02\x02\x02\u011C" +
		"\u011D\x07>\x02\x02\u011D\u011E\x07?\x02\x02\u011EZ\x03\x02\x02\x02\u011F" +
		"\u0120\x07@\x02\x02\u0120\\\x03\x02\x02\x02\u0121\u0122\x07@\x02\x02\u0122" +
		"\u0123\x07?\x02\x02\u0123^\x03\x02\x02\x02\u0124\u0125\x07-\x02\x02\u0125" +
		"\u0126\x07-\x02\x02\u0126`\x03\x02\x02\x02\u0127\u0129\t\x02\x02\x02\u0128" +
		"\u0127\x03\x02\x02\x02\u0129\u012A\x03\x02\x02\x02\u012A\u0128\x03\x02" +
		"\x02\x02\u012A\u012B\x03\x02\x02\x02\u012B\u012C\x03\x02\x02\x02\u012C" +
		"\u012D\b1\x02\x02\u012Db\x03\x02\x02\x02\u012E\u0130\t\x03\x02\x02\u012F" +
		"\u012E\x03\x02\x02\x02\u0130\u0131\x03\x02\x02\x02\u0131\u012F\x03\x02" +
		"\x02\x02\u0131\u0132\x03\x02\x02\x02\u0132d\x03\x02\x02\x02\u0133\u0134" +
		"\x05k6\x02\u0134f\x03\x02\x02\x02\u0135\u0136\t\x04\x02\x02\u0136h\x03" +
		"\x02\x02\x02\u0137\u0139\t\x03\x02\x02\u0138\u0137\x03\x02\x02\x02\u0139" +
		"\u013A\x03\x02\x02\x02\u013A\u0138\x03\x02\x02\x02\u013A\u013B\x03\x02" +
		"\x02\x02\u013Bj\x03\x02\x02\x02\u013C\u013E\x05i5\x02\u013D\u013C\x03" +
		"\x02\x02\x02\u013D\u013E\x03\x02\x02\x02\u013E\u013F\x03\x02\x02\x02\u013F" +
		"\u0140\x070\x02\x02\u0140\u0145\x05i5\x02\u0141\u0142\x05i5\x02\u0142" +
		"\u0143\x070\x02\x02\u0143\u0145\x03\x02\x02\x02\u0144\u013D\x03\x02\x02" +
		"\x02\u0144\u0141\x03\x02\x02\x02\u0145l\x03\x02\x02\x02\u0146\u014B\x05" +
		"g4\x02\u0147\u014A\x05g4\x02\u0148\u014A\x05i5\x02\u0149\u0147\x03\x02" +
		"\x02\x02\u0149\u0148\x03\x02\x02\x02\u014A\u014D\x03\x02\x02\x02\u014B" +
		"\u0149\x03\x02\x02\x02\u014B\u014C\x03\x02\x02\x02\u014Cn\x03\x02\x02" +
		"\x02\u014D\u014B\x03\x02\x02\x02\n\x02\u012A\u0131\u013A\u013D\u0144\u0149" +
		"\u014B\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CLexer.__ATN) {
			CLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CLexer._serializedATN));
		}

		return CLexer.__ATN;
	}

}

